import { ApolloProvider } from '@apollo/client';
import { UserProvider } from '@auth0/nextjs-auth0';
import { Menu } from '@mui/icons-material';
import { Box, Container, CssBaseline, IconButton } from '@mui/material';
import { createTheme, ThemeProvider } from '@mui/material/styles';
import type { AppProps } from 'next/app';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useReducer, useRef } from 'react';
import { createPortal } from 'react-dom';
import { client } from '../client';
import { EmojiMarker, Map, Navigation, TopBar } from '../components';
import { useGetCatsQuery } from '../generated/graphql';

const theme = createTheme({
  palette: {
    mode: 'dark',
  },
});

export default function MyApp({ Component, pageProps }: AppProps) {
  const [isMenuOpen, toggleMenu] = useReducer((v) => !v, false);
  const portalRoot = useRef(null);
  const toolbarRef = useRef(null);
  const router = useRouter();

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <UserProvider>
        <ApolloProvider client={client}>
          <Head>
            <title>Create Next App</title>
            <meta content="Generated by create next app" name="description" />
            <link href="/favicon.ico" rel="icon" />
            <link
              crossOrigin=""
              href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
              integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
              rel="stylesheet"
            />
            <link
              crossOrigin=""
              href="https://api.mapbox.com/mapbox-gl-js/v2.6.0/mapbox-gl.css"
              rel="stylesheet"
            />
          </Head>

          <Box position="absolute" ref={portalRoot} zIndex={5000} />
          <Container
            alignItems="stretch"
            bgcolor="white"
            component={Box}
            disableGutters={true}
            flexDirection="column"
            height="100vh"
            justifyContent="center"
            maxHeight="100%"
            maxWidth={false}
            sx={{ display: 'flex' }}
          >
            <TopBar
              menu={
                <IconButton aria-label="app menu" onClick={toggleMenu}>
                  <Menu />
                </IconButton>
              }
              ref={toolbarRef}
              title="Bodega Cats of NYC"
            />
            <Box alignItems="center" display="flex" flexGrow={1} justifyContent="center">
              <Map
                center={[40.73061, -73.935242]}
                style={{ display: 'flex', flexGrow: 1, height: '100%' }}
                zoom={15}
                zoomControlPosition="bottomright"
              >
                {portalRoot.current &&
                  createPortal(<Component {...pageProps} />, portalRoot.current)}
                <MarkerList
                  onClick={(id) => router.push(`/cat/${id}`, undefined, { shallow: true })}
                />
              </Map>
            </Box>
            <Navigation
              isShowing={isMenuOpen}
              offsetTop={toolbarRef.current?.offsetHeight}
              onClose={toggleMenu}
            />
          </Container>
        </ApolloProvider>
      </UserProvider>
    </ThemeProvider>
  );
}

type MarkerListProps = {
  onClick: (id: string) => void;
};

function MarkerList({ onClick }: MarkerListProps) {
  const { data } = useGetCatsQuery();

  return (
    <>
      {data?.cats.map((marker) => (
        <EmojiMarker
          key={marker.id}
          label="cat"
          onClick={() => onClick(marker.id)}
          position={[marker.lat, marker.lng]}
          symbol="🐈‍⬛"
        />
      ))}
    </>
  );
}
